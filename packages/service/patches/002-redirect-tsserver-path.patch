diff --git a/src/tsServer/versionProvider.electron.ts b/src/tsServer/versionProvider.electron.ts
index dca0fb2..7891dd9 100644
--- a/src/tsServer/versionProvider.electron.ts
+++ b/src/tsServer/versionProvider.electron.ts
@@ -10,6 +10,8 @@ import API from '../utils/api';
 import { TypeScriptServiceConfiguration } from '../utils/configuration';
 import { RelativeWorkspacePathResolver } from '../utils/relativePathResolver';
 import { ITypeScriptVersionProvider, TypeScriptVersion, TypeScriptVersionSource } from './versionProvider';
+import { createRequire } from 'module';
+const req = createRequire(import.meta.url);
 
 
 export class DiskTypeScriptVersionProvider implements ITypeScriptVersionProvider {
@@ -78,14 +80,16 @@ export class DiskTypeScriptVersionProvider implements ITypeScriptVersionProvider
 
 	private getContributedVersion(source: TypeScriptVersionSource, extensionId: string, pathToTs: readonly string[]): TypeScriptVersion | undefined {
 		try {
-			const extension = vscode.extensions.getExtension(extensionId);
-			if (extension) {
-				const serverPath = path.join(extension.extensionPath, ...pathToTs, 'typescript', 'lib', 'tsserver.js');
+			// const extension = vscode.extensions.getExtension(extensionId);
+			// if (extension) {
+				const tsPath = req.resolve("typescript", { paths: [import.meta.url] })
+				const serverPath = path.join(path.dirname(tsPath), 'tsserver.js');
+
 				const bundledVersion = new TypeScriptVersion(source, serverPath, DiskTypeScriptVersionProvider.getApiVersion(serverPath), '');
 				if (bundledVersion.isValid) {
 					return bundledVersion;
 				}
-			}
+			// }
 		} catch {
 			// noop
 		}
